{"version":3,"sources":["hooks/use-verification.js","components/BasicForm.js","App.js","index.js"],"names":["defaultstate","value","isTouched","reduceInput","state","action","type","useVerification","validationMethod","useReducer","inputState","dispatch","inputIsValid","hasError","validInputClasses","isValid","touched","validClass","valueBlurHandler","e","valueChangeHandler","target","BasicForm","props","trim","enteredName","nameValid","nameIsTouched","invalidName","validNameClass","nameBlurHandler","nameValueChangeHandler","entered_2Name","_2NameValid","_2nameIsTouched","invalid_2Name","valid_2NameClass","_2nameBlurHandler","_2nameValueChangeHandler","includes","enteredEmail","emailValid","emailIsTouched","invalidEmail","validEmailClass","emailBlurHandler","emailValueChangeHandler","console","log","formIsValid","onSubmit","preventDefault","className","htmlFor","id","onChange","onBlur","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"mLAEMA,EAAe,CACnBC,MAAO,GACPC,WAAW,GAEPC,EAAc,SAACC,EAAOC,GAC1B,MAAoB,UAAhBA,EAAOC,KACF,CAAEL,MAAOI,EAAOJ,MAAOC,UAAWE,EAAMF,WAE7B,SAAhBG,EAAOC,KACF,CAAEL,MAAOG,EAAMH,MAAOC,WAAW,GAEnCF,GA8BMO,EA3BS,SAACC,GACvB,MAA+BC,qBAAWN,EAAaH,GAAvD,mBAAOU,EAAP,KAAmBC,EAAnB,KAEMC,EAAeJ,EAAiBE,EAAWT,OAC3CY,EAAWH,EAAWR,YAAcU,EASpCE,EAAoBD,EACtB,wBACA,gBAEJ,MAAO,CACLZ,MAAOS,EAAWT,MAClBc,QAASH,EACTI,QAASN,EAAWR,UACpBW,WACAI,WAAYH,EACZI,iBAjBuB,SAACC,GACxBR,EAAS,CAAEL,KAAM,UAiBjBc,mBAfyB,SAACD,GAC1BR,EAAS,CAAEL,KAAM,QAASL,MAAOkB,EAAEE,OAAOpB,W,OCyE/BqB,EAjGG,SAACC,GACjB,MAQIhB,GAAgB,SAACN,GAAD,MAA4B,KAAjBA,EAAMuB,UAP5BC,EADT,EACExB,MACSyB,EAFX,EAEEX,QACSY,EAHX,EAGEX,QACUY,EAJZ,EAIEf,SACYgB,EALd,EAKEZ,WACkBa,EANpB,EAMEZ,iBACoBa,EAPtB,EAOEX,mBAGF,EAQIb,GAAgB,SAACN,GAAD,MAA4B,KAAjBA,EAAMuB,UAP5BQ,EADT,EACE/B,MACSgC,EAFX,EAEElB,QACSmB,EAHX,EAGElB,QACUmB,EAJZ,EAIEtB,SACYuB,EALd,EAKEnB,WACkBoB,EANpB,EAMEnB,iBACoBoB,EAPtB,EAOElB,mBAGF,EAQIb,GAAgB,SAACN,GAAD,OAAWA,EAAMsC,SAAS,QAPrCC,EADT,EACEvC,MACSwC,EAFX,EAEE1B,QACS2B,EAHX,EAGE1B,QACU2B,EAJZ,EAIE9B,SACY+B,EALd,EAKE3B,WACkB4B,EANpB,EAME3B,iBACoB4B,EAPtB,EAOE1B,mBAUF2B,QAAQC,IAAIpB,EAAaO,EAAeQ,GACxC,IAAIM,GAAc,EAOlB,OANAF,QAAQC,IAAIC,GAERR,GAAcf,GAAaO,IAC7BgB,GAAc,EACdF,QAAQC,IAAIC,IAGZ,uBAAMC,SAhBW,SAAC/B,GAClBA,EAAEgC,iBACFxB,GAAc,GACdO,GAAgB,GAChBQ,GAAe,IAYf,UACE,sBAAKU,UAAU,gBAAf,UACE,sBAAKA,UAAWvB,EAAhB,UACE,uBAAOwB,QAAQ,OAAf,wBACA,uBACE/C,KAAK,OACLgD,GAAG,OACHrD,MAAOwB,EACP8B,SAAUxB,EACVyB,OAAQ1B,IAETF,GACC,mBAAGwB,UAAU,aAAb,kDAGJ,sBAAKA,UAAWhB,EAAhB,UACE,uBAAOiB,QAAQ,QAAf,uBACA,uBACE/C,KAAK,OACLgD,GAAG,QACHrD,MAAO+B,EACPuB,SAAUjB,EACVkB,OAAQnB,IAETF,GACC,mBAAGiB,UAAU,aAAb,sDAIN,sBAAKA,UAAWR,EAAhB,UACE,uBAAOS,QAAQ,QAAf,oBACA,uBACE/C,KAAK,OACLgD,GAAG,QACHrD,MAAOuC,EACPe,SAAUT,EACVU,OAAQX,IAETF,GACC,mBAAGS,UAAU,aAAb,qDAGJ,qBAAKA,UAAU,eAAf,SAEE,wBAAQK,UAAWR,EAAnB,0BCnFOS,MARf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCANO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.a2924aef.chunk.js","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst defaultstate = {\r\n  value: \"\",\r\n  isTouched: false,\r\n};\r\nconst reduceInput = (state, action) => {\r\n  if (action.type === \"INPUT\") {\r\n    return { value: action.value, isTouched: state.isTouched };\r\n  }\r\n  if (action.type === \"BLUR\") {\r\n    return { value: state.value, isTouched: true };\r\n  }\r\n  return defaultstate;\r\n};\r\n\r\nconst useVerification = (validationMethod) => {\r\n  const [inputState, dispatch] = useReducer(reduceInput, defaultstate);\r\n\r\n  const inputIsValid = validationMethod(inputState.value);\r\n  const hasError = inputState.isTouched && !inputIsValid;\r\n\r\n  const valueBlurHandler = (e) => {\r\n    dispatch({ type: \"BLUR\" });\r\n  };\r\n  const valueChangeHandler = (e) => {\r\n    dispatch({ type: \"INPUT\", value: e.target.value });\r\n  };\r\n\r\n  const validInputClasses = hasError\r\n    ? \"form-control invalid \"\r\n    : \"form-control \";\r\n\r\n  return {\r\n    value: inputState.value,\r\n    isValid: inputIsValid,\r\n    touched: inputState.isTouched,\r\n    hasError,\r\n    validClass: validInputClasses,\r\n    valueBlurHandler,\r\n    valueChangeHandler,\r\n  };\r\n};\r\nexport default useVerification;\r\n","import useVerification from \"../hooks/use-verification\";\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredName,\n    isValid: nameValid,\n    touched: nameIsTouched,\n    hasError: invalidName,\n    validClass: validNameClass,\n    valueBlurHandler: nameBlurHandler,\n    valueChangeHandler: nameValueChangeHandler,\n  } = useVerification((value) => value.trim() !== \"\");\n\n  const {\n    value: entered_2Name,\n    isValid: _2NameValid,\n    touched: _2nameIsTouched,\n    hasError: invalid_2Name,\n    validClass: valid_2NameClass,\n    valueBlurHandler: _2nameBlurHandler,\n    valueChangeHandler: _2nameValueChangeHandler,\n  } = useVerification((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    isValid: emailValid,\n    touched: emailIsTouched,\n    hasError: invalidEmail,\n    validClass: validEmailClass,\n    valueBlurHandler: emailBlurHandler,\n    valueChangeHandler: emailValueChangeHandler,\n  } = useVerification((value) => value.includes(\"@\"));\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    nameIsTouched(false);\n    _2nameIsTouched(false);\n    emailIsTouched(false);\n  };\n\n  console.log(invalidName, invalid_2Name, invalidEmail);\n  let formIsValid = false;\n  console.log(formIsValid);\n\n  if (emailValid && nameValid && _2NameValid) {\n    formIsValid = true;\n    console.log(formIsValid);\n  }\n  return (\n    <form onSubmit={submitForm}>\n      <div className=\"control-group\">\n        <div className={validNameClass}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={enteredName}\n            onChange={nameValueChangeHandler}\n            onBlur={nameBlurHandler}\n          />\n          {invalidName && (\n            <p className=\"error-text\"> Please enter a valid first name.</p>\n          )}\n        </div>\n        <div className={valid_2NameClass}>\n          <label htmlFor=\"2name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"2name\"\n            value={entered_2Name}\n            onChange={_2nameValueChangeHandler}\n            onBlur={_2nameBlurHandler}\n          />\n          {invalid_2Name && (\n            <p className=\"error-text\"> Please enter a valid second name.</p>\n          )}\n        </div>\n      </div>\n      <div className={validEmailClass}>\n        <label htmlFor=\"email\">E-mail</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          value={enteredEmail}\n          onChange={emailValueChangeHandler}\n          onBlur={emailBlurHandler}\n        />\n        {invalidEmail && (\n          <p className=\"error-text\"> Please enter a valid e-mail adress.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        {/* <button>Submit</button> */}\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import BasicForm from \"./components/BasicForm\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}